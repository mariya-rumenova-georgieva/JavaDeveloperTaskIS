#Схема за база данни нужна за имплементацията на JavaCandidateTask_developer
CREATE SCHEMA IF NOT EXISTS developer_task;
ALTER SCHEMA developer_task CHARACTER SET utf8;

USE developer_task;


#Таблица T_PEOPLE:
CREATE TABLE IF NOT EXISTS T_PEOPLE(
ID INT NOT NULL AUTO_INCREMENT,
FULL_NAME VARCHAR(90) NOT NULL,
PIN VARCHAR(10),
CONSTRAINT T_PEOPLE_ID_PK PRIMARY KEY (ID));

# Тестови записи за таблицата T_PEOPLE според изискванията в задачата
INSERT INTO T_PEOPLE (FULL_NAME, PIN) VALUES ('Иван Иванов', '1234567890');
INSERT INTO T_PEOPLE (FULL_NAME, PIN) VALUES ('Иван Тодоров', '1234567891');
INSERT INTO T_PEOPLE (FULL_NAME, PIN) VALUES ('Иван Георгиев', '1234567892');
INSERT INTO T_PEOPLE (FULL_NAME, PIN) VALUES ('Ана Тодорова', '1234567893');
INSERT INTO T_PEOPLE (FULL_NAME, PIN) VALUES ('Ана Тодорова', '1234567894');
INSERT INTO T_PEOPLE (FULL_NAME, PIN) VALUES ('Ана Иванова', '1234567895');
INSERT INTO T_PEOPLE (FULL_NAME, PIN) VALUES ('Георги Иванов', '1234567896');
INSERT INTO T_PEOPLE (FULL_NAME, PIN) VALUES ('Георги Тодоров', '1234567897');
INSERT INTO T_PEOPLE (FULL_NAME, PIN) VALUES ('Георги Георгиев', '1234567898');
INSERT INTO T_PEOPLE (FULL_NAME, PIN) VALUES ('Ивана Иванова', '1234567899');


#Номенклатурна таблица за тип имейл
CREATE TABLE IF NOT EXISTS T_EMAIL_TYPE(
EMAIL_TYPE_CODE VARCHAR(5) NOT NULL UNIQUE,
EMAIL_TYPE_NAME VARCHAR(100) NOT NULL,
CONSTRAINT EMAIL_TYPE_PK PRIMARY KEY (EMAIL_TYPE_CODE));

# Тестови записи за таблицата T_EMAIL_TYPE
INSERT INTO T_EMAIL_TYPE (EMAIL_TYPE_CODE, EMAIL_TYPE_NAME) VALUES ('T1', 'abv');
INSERT INTO T_EMAIL_TYPE (EMAIL_TYPE_CODE, EMAIL_TYPE_NAME) VALUES ('T2', 'gmail');


#Таблица T_MAILS:
CREATE TABLE IF NOT EXISTS T_MAILS(
ID INT NOT NULL AUTO_INCREMENT,
T_PEOPLE_ID INT NOT NULL,
EMAIL_TYPE VARCHAR(5) NOT NULL,
EMAIL VARCHAR(40),
CONSTRAINT T_MAILS_ID_PK PRIMARY KEY (ID),
CONSTRAINT T_MAILS_T_PEOPLE_ID_FK FOREIGN KEY (T_PEOPLE_ID) REFERENCES T_PEOPLE(ID));

# Тестови записи за таблицата T_MAILS
INSERT INTO T_MAILS (T_PEOPLE_ID, EMAIL_TYPE, EMAIL) VALUES (1, 'T1' ,'ivan_ivanov@abv.bg');
INSERT INTO T_MAILS (T_PEOPLE_ID, EMAIL_TYPE, EMAIL) VALUES (2, 'T1' ,'ivan_todorov@abv.bg');
INSERT INTO T_MAILS (T_PEOPLE_ID, EMAIL_TYPE, EMAIL) VALUES (3, 'T1' ,'ivan_georgiev@abv.bg');
INSERT INTO T_MAILS (T_PEOPLE_ID, EMAIL_TYPE, EMAIL) VALUES (4, 'T1' ,'a_todorova@abv.bg');
INSERT INTO T_MAILS (T_PEOPLE_ID, EMAIL_TYPE, EMAIL) VALUES (5, 'T1' ,'a_v_todorova@abv.bg');
INSERT INTO T_MAILS (T_PEOPLE_ID, EMAIL_TYPE, EMAIL) VALUES (6, 'T1' ,'a_ivanova@abv.bg');

# select * from T_MAILS as m join T_PEOPLE as p on m.T_PEOPLE_ID = p.id where p.id = 2;


#Номенклатурна таблица за тип адрес
CREATE TABLE IF NOT EXISTS T_ADDRESS_TYPE(
ADDRESS_TYPE_CODE VARCHAR(5) NOT NULL UNIQUE,
ADDRESS_TYPE_NAME VARCHAR(100) NOT NULL,
CONSTRAINT ADDRESS_TYPE_PK PRIMARY KEY (ADDRESS_TYPE_CODE));

# Тестови записи за таблицата T_ADDRESS_TYPE
INSERT INTO T_ADDRESS_TYPE (ADDRESS_TYPE_CODE, ADDRESS_TYPE_NAME) VALUES ('T1', 'Постоянен');
INSERT INTO T_ADDRESS_TYPE (ADDRESS_TYPE_CODE, ADDRESS_TYPE_NAME) VALUES ('T2', 'Временен');

#Таблица T_ADDRESSES:
CREATE TABLE IF NOT EXISTS T_ADDRESSES(
ID INT NOT NULL AUTO_INCREMENT,
T_PEOPLE_ID INT NOT NULL,
ADDR_TYPE VARCHAR(5) NOT NULL,
ADDR_INFO VARCHAR(300),
CONSTRAINT T_MAILS_ID_PK PRIMARY KEY (ID),
CONSTRAINT T_ADDRESSES_T_PEOPLE_ID_FK FOREIGN KEY (T_PEOPLE_ID) REFERENCES T_PEOPLE(ID));

# Тестови записи за таблицата T_ADDRESSES
INSERT INTO T_ADDRESSES (T_PEOPLE_ID, ADDR_TYPE, ADDR_INFO) VALUES (1, 'T1' ,'Адрес 1');
INSERT INTO T_ADDRESSES (T_PEOPLE_ID, ADDR_TYPE, ADDR_INFO) VALUES (2, 'T1' ,'Адрес 3');
INSERT INTO T_ADDRESSES (T_PEOPLE_ID, ADDR_TYPE, ADDR_INFO) VALUES (3, 'T1' ,'Адрес 5');
INSERT INTO T_ADDRESSES (T_PEOPLE_ID, ADDR_TYPE, ADDR_INFO) VALUES (4, 'T1' ,'Адрес 3');
INSERT INTO T_ADDRESSES (T_PEOPLE_ID, ADDR_TYPE, ADDR_INFO) VALUES (5, 'T1' ,'Адрес 7');
INSERT INTO T_ADDRESSES (T_PEOPLE_ID, ADDR_TYPE, ADDR_INFO) VALUES (6, 'T1' ,'Адрес 8');




